// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimplePainterServer.Model;

#nullable disable

namespace SimplePainterServer.Migrations
{
    [DbContext(typeof(MainDateBase))]
    [Migration("20241204065635_WordCreateTime.AddType.1")]
    partial class WordCreateTimeAddType1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SimplePainterServer.Model.Guess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ImageId");

                    b.HasIndex("UserID");

                    b.ToTable("Guesses");
                });

            modelBuilder.Entity("SimplePainterServer.Model.ImageInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.HasIndex("WordId");

                    b.ToTable("ImageInfos");
                });

            modelBuilder.Entity("SimplePainterServer.Model.UserInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("SimplePainterServer.Model.WordCreateTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("WordInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordInfoId");

                    b.ToTable("WordCreateTime");
                });

            modelBuilder.Entity("SimplePainterServer.Model.WordInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PartSpeech")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserInfoID");

                    b.ToTable("WordInfos");
                });

            modelBuilder.Entity("SimplePainterServer.Model.Guess", b =>
                {
                    b.HasOne("SimplePainterServer.Model.ImageInfo", "Image")
                        .WithMany("Guesses")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplePainterServer.Model.UserInfo", "User")
                        .WithMany("Guesses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimplePainterServer.Model.ImageInfo", b =>
                {
                    b.HasOne("SimplePainterServer.Model.UserInfo", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplePainterServer.Model.WordInfo", "Word")
                        .WithMany("Images")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("SimplePainterServer.Model.WordCreateTime", b =>
                {
                    b.HasOne("SimplePainterServer.Model.WordInfo", "WordInfo")
                        .WithMany("WordCreateTime")
                        .HasForeignKey("WordInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordInfo");
                });

            modelBuilder.Entity("SimplePainterServer.Model.WordInfo", b =>
                {
                    b.HasOne("SimplePainterServer.Model.UserInfo", null)
                        .WithMany("Words")
                        .HasForeignKey("UserInfoID");
                });

            modelBuilder.Entity("SimplePainterServer.Model.ImageInfo", b =>
                {
                    b.Navigation("Guesses");
                });

            modelBuilder.Entity("SimplePainterServer.Model.UserInfo", b =>
                {
                    b.Navigation("Guesses");

                    b.Navigation("Images");

                    b.Navigation("Words");
                });

            modelBuilder.Entity("SimplePainterServer.Model.WordInfo", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("WordCreateTime");
                });
#pragma warning restore 612, 618
        }
    }
}
